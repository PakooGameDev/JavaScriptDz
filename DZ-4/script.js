// Objects
// Complete exercise
// NORMAL level
// Task 1 üíª

// –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–∞–∂–¥—ã–π –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –ø—É–Ω–∫—Ç–æ–≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π:

//     –°–æ–∑–¥–∞–π—Ç–µ –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç profile (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ const);
//     –î–æ–±–∞–≤—å—Ç–µ –≤ –Ω–µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–æ name —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º John;
//     –î–æ–±–∞–≤—å—Ç–µ –≤ –Ω–µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–æ #lib_internal_isAdmin —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º true;
//     –ò–∑–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ name —Å John –Ω–∞ –§—ë–¥–æ—Ä;
//     –£–¥–∞–ª–∏—Ç–µ —Å–≤–æ–π—Å—Ç–≤–æ #lib_internal_isAdmin;


const profile = {}

profile.name = 'John'

profile['#lib_internal_isAdmin'] = true

profile.name = '–§—ë–¥–æ—Ä'

delete profile['#lib_internal_isAdmin']

console.log(profile)

// Task 2 üñ•

// –î–∞–Ω –æ–±—å–µ–∫—Ç:

const colors = {
    'ru pum pu ru rum': {
        red: '–∫—Ä–∞—Å–Ω—ã–π',
        green: '–∑–µ–ª–µ–Ω—ã–π',
        blue: '—Å–∏–Ω–∏–π'
    },
};

// –í—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å–ª–æ–≤–æ –∫—Ä–∞—Å–Ω—ã–π

console.log(colors['ru pum pu ru rum'].red)

// Task 3 üñ•

// –î–∞–Ω –æ–±—å–µ–∫—Ç:

    const student = {
        name: 'John',
        age: 19,
        isHappy: true
    }

// C –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞ for in –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å–Ω–∞—á–∞–ª–∞ –≤—Å–µ –ø–∞—Ä—ã –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ –≤ –æ–±—ä–µ–∫—Ç–µ.

//     name - John age - 19 isHappy - true

for (let key in student) {
    console.log(`${key} - ${student[key]}`)
}

// Task 4 üñ•

// –î–∞–Ω –æ–±—å–µ–∫—Ç:

    let salaries = {
        andrey: 500,
        sveta: 413,
        anton: 987,
        alex: 664,
        alexandra: 199
    }

// –í—ã—á–∏—Å–ª–∏—Ç–µ —Å—Ä–µ–¥–Ω—é—é –∑–∞—Ä–ø–ª–∞—Ç—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤

    let sum = 0

    for (let key in salaries) {
        sum += salaries[key]
    }

    console.log(sum)

// Task 5 üñ•

// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é isEmpty(), –∫–æ—Ç–æ—Ä–∞—è –≤–µ—Ä–Ω—ë—Ç true, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –≤ –Ω–µ—ë –æ–±—ä–µ–∫—Ç –ø—É—Å—Ç (–Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–≤–æ–π—Å—Ç–≤).

function isEmpty(obj) {
    for (let key in obj) {
        return false
    }
    return true
}

console.log(isEmpty({})); // true
console.log(isEmpty({ lol: "kek" })); // false

// Task 6 üñ•

// –£ –Ω–∞—Å –µ—Å—Ç—å –æ–±—å–µ–∫—Ç —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏. –ù–∞—à–∞ –∑–∞–¥–∞—á–∞ —É–∑–Ω–∞—Ç—å –∏–º—è –ø—Ç–∏—Ü—ã –∏ –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å. 
// –ù–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∏ –≤ —ç—Ç–æ–º –æ–±—å–µ–∫—Ç–µ –Ω–µ—Ç—É –ø—Ç–∏—Ü—ã. –ï—Å–ª–∏ –ø–æ–ø—Ä–æ–±—É–µ–º —É–∑–Ω–∞—Ç—å –∏–º—è –º—ã –ø–æ–ª—É—á–∏–º –û–®–ò–ë–ö–£. 
// –ó–∞–¥–∞—á–∞ –ø—Ä–∏–¥—É–º–∞—Ç—å –∫–∞–∫ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –æ–±—å–µ–∫—Ç—É –∏ –Ω–µ –ø–æ–ª—É—á–∏—Ç—å –æ—à–∏–±–∫—É —á—Ç–æ–±—ã –Ω–∞—à–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–ª–∞ –¥–∞–ª—å—à–µ.

const animals = {
   cat: {
      name: '–ï–Ω—á–∏–∫',
      age: 3,
   },
   dog: {
      name: '–û—Ä–µ–æ',
      age: 2,
   },
}

console.log(animals && animals.bird && animals.bird.name);


// Task 7 üñ•

// –û–ø–∏—à–∏—Ç–µ –ø–æ –ø—É–Ω–∫—Ç–∞–º, –∫–∞–∫ –æ—Ç—Ä–∞–±–æ—Ç–∞–µ—Ç —ç—Ç–æ—Ç –∫–æ–¥? –í–∞–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å, —á—Ç–æ –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–æ –≤ this –∏ –ø–æ—á–µ–º—É?

function makeProfile() {
  return {
    name: "John",
    self: this
  };
}

let user = makeProfile();

console.log(user.self.name); // –ö–∞–∫–∏–º –±—É–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç?

// 1) –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç—Å—è, –Ω–æ –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è
// 2) –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è user –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏
// 3) —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç name –∏ self, self –≤ —Å–≤–æ—é –æ—á–µ—Ä–µ–¥—å —Ö—Ä–∞–Ω–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ this –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤—ã–∑–æ–≤–∞
// 4) —Ñ—É–Ω–∫—Ü–∏—é –≤—ã–∑—ã–≤–∞–µ–º –≤–Ω–µ –æ–±—ä–µ–∫—Ç–∞, –∞ –≤–Ω—É—Ç—Ä–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏, –≥–¥–µ —Å–≤–æ–π—Å—Ç–≤–∞ name –ø–æ–ø—Ä–æ—Å—Ç—É –Ω–µ—Ç
// 5) –ë—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ undefined –∏–ª–∏... <empty string> ??


// Task 8 üñ•

// –°–æ–∑–¥–∞–π—Ç–µ –æ–±—ä–µ–∫—Ç —Å—á—ë—Ç—á–∏–∫ counter, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –∑–∞–ø–∏—Å–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Ä–∞–≤–Ω–æ–µ 0. –í counter –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ—Ç–æ–¥ showCurrent(), –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –¢–∞–∫–∂–µ –≤ –æ–±—ä–µ–∫—Ç–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–≤–∞ –º–µ—Ç–æ–¥–∞ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –∏ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è:

const counter = {
    value: 0,
    showCurrent() {
        console.log(this.value);
    },
    increment() {
        this.value++;
    },
    decrement() {
        this.value--;
    }
}

counter.showCurrent(); // 0 - –≤—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
counter.increment();
counter.increment();
counter.showCurrent(); // 2
counter.decrement();
counter.showCurrent(); // 1


// Task 9 üñ•

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Ü–µ–ø–æ—á–∫—É –≤—ã–∑–æ–≤–æ–≤: counter.showCurrent().increment().increment().showCurrent().decrement().showCurrent();


const counterB = {
    value: 0,
    showCurrent() {
        console.log(this.value);
        return this;
    },
    increment() {
        this.value++;
        return this;
    },
    decrement() {
        this.value--;
        return this;
    }
}

counterB.showCurrent().increment().increment().showCurrent().decrement().showCurrent();


// Task 10 üñ•

// –°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é-–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Counter(), –∫–æ—Ç–æ—Ä–∞—è —Å–º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—á—ë—Ç—á–∏–∫–∏ –∏–∑ –∑–∞–¥–∞–Ω–∏–π 8-9:


function Counter() {
    this.value = 0;

    this.showCurrent = function() {
        console.log(this.value);
        return this;
    };

    this.increment = function() {
        this.value++;
        return this;
    };

    this.decrement = function() {
        this.value--;
        return this;
    };
}


const counter1 = new Counter();
const counter2 = new Counter();

counter2.increment();
counter2.showCurrent(); // 1
counter1.showCurrent(); // 0


